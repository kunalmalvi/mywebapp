name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python3 manage.py test
        
    - name: Tag
      id: autotagger
      uses: butlerlogic/action-autotag@stable
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
    - name: Release
      id: create_release
      if: steps.autotagger.outputs.tagname != ''
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.autotagger.outputs.tagname }}
        release_name: Version ${{ steps.autotagger.outputs.version }}
        body: ${{ steps.autotagger.outputs.tagmessage }}
        draft: false
        prerelease: true

    - name: Publish
      id: publish_npm
      if: steps.autotagger.outputs.tagname != ''
      uses: author/action-publish@stable
      env:
        REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

    - name: Rollback Release
      if: failure() && steps.create_release.outputs.id != ''
      uses: author/action-rollback@stable
      with:
        id: ${{ steps.create_release.id }}
        tag: ${{ steps.autotagger.outputs.tagname }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
